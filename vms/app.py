from flask import Flask, render_template, jsonify, request, session, redirect, url_for
import jwt
import datetime
import hashlib
from pymongo import MongoClient

SECRET_KEY = 'SPARTA'

app = Flask(__name__)

#client = MongoClient('mongodb://root:example@localhost:27017/?authMechanism=DEFAULT')
client = MongoClient('mongodb://root:example@mongodb:27017/?authMechanism=DEFAULT')

db = client.VMS

@app.route('/admin')
def admin():
    return render_template("admin.html")

@app.route('/')
def index():
    return render_template("index.html")

@app.route('/login')
def login():
    return render_template("login.html")

@app.route('/api/login', methods=['POST'])
def api_login():
    id_receive = request.form['ID']
    pw_receive = request.form['PASSWORD']
    print("id_receive:",id_receive)
    print("pw_receive:",pw_receive)

    # 회원가입 때와 같은 방법으로 pw를 암호화합니다.
    #pw_hash = hashlib.sha256(pw_receive.encode('utf-8')).hexdigest()

    # id, 암호화된pw을 가지고 해당 유저를 찾습니다.
    result = db.user.find_one({'id': id_receive, 'pw': pw_receive})
    print("result",result)

    # 찾으면 JWT 토큰을 만들어 발급합니다.
    if result is not None:
        # JWT 토큰 생성
        payload = {
            'id': id_receive,
            'exp': datetime.datetime.utcnow() + datetime.timedelta(seconds=100)
        }
        token = jwt.encode(payload, SECRET_KEY, algorithm='HS256')

        # token을 줍니다.
        return jsonify({'result': 'success', 'token': token})
    # 찾지 못하면
    else:
        return jsonify({'result': 'fail', 'msg': '아이디/비밀번호가 일치하지 않습니다.'})

if __name__ == '__main__':
    app.run(host='0.0.0.0',port=80, debug=True)