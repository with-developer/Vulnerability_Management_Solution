// Modal Data Post Start
$(document).ready(function () {
    document.getElementById("connectButton").addEventListener("click", function (e) { // 'e'를 매개변수로 추가
        e.preventDefault(); // Prevent the default form submit action

        var serverName = $('#server_name').val();
        var serverIp = $('#server_ip').val();
        $('#loadingSpinner').show();
        $('#overlay').show();

        $.ajax({
            type: "POST",
            url: "/api/agent_connect",
            data: {
                server_name: serverName,
                server_ip: serverIp
            },
            success: function (response) {
                $("#loadingSpinner").hide();
                $('#overlay').hide();
                console.log(response)
                if (response['result'] == 'success') {
                    Swal.fire('successfully', response['message'], 'success').then(function () {
                        location.reload();
                    });
                } else {
                    Swal.fire('ERROR', response['message'], 'error');
                }
            },
            error: function (error) {
                // Handle error
                $("#loadingSpinner").hide();
                $('#overlay').hide();
                Swal.fire('ERROR', "Error sending data.", 'error');
            }
        });
    });
});
// Modal Data Post End

// View Agent Detail Ajax Start
$(document).ready(function () {
    // Config button 클릭 이벤트
    $(".configButton").click(function (e) {
        e.preventDefault(); // 기본 동작을 막습니다.
        // 해당 버튼의 data-id 값을 가져옵니다.
        var agentId = $(this).attr("data-id");

        // AJAX를 사용하여 서버에서 agent의 정보를 가져옵니다.
        $.ajax({
            type: "GET",
            url: "/api/agents_config",
            data: {
                agent_id: agentId
            },
            success: function (response) {
                // 가져온 정보를 모달의 입력 필드에 채웁니다.
                $("#currentAgentId").val(agentId);
                $('#configServerName').val(response.server_name);
                $('#configServerIP').val(response.server_ip);
                $('#configServerDistro').val(response.remote_id_like);
                $('#configServerOS').val(response.remote_id);
                $('#configServerVersion').val(response.remote_version);

                // 모달을 수동으로 띄웁니다.
                $('#configModal').modal('show');
            },
            error: function (error) {
                if (error.responseJSON && error.responseJSON.error) {
                    Swal.fire(error.responseJSON.error_code, error.responseJSON.error, 'error');
                } else {
                    Swal.fire('ERROR', "Error fetching agent data", 'error');
                }
            }
        });
    });
    $("#saveConfigButton").click(function (e) {
        e.preventDefault();

        var agentId = $("#currentAgentId").val();
        var serverName = $('#configServerName').val();
        var serverIp = $('#configServerIP').val();
        var serverDistro = $('#configServerDistro').val();
        var serverOS = $('#configServerOS').val();
        var serverVersion = $('#configServerVersion').val();

        $.ajax({
            type: "POST",
            url: "/api/agents_config_save",
            data: {
                agent_id: agentId,
                server_name: serverName,
                server_ip: serverIp,
                remote_id_like: serverDistro,
                remote_id: serverOS,
                remote_version: serverVersion
            },
            success: function (response) {
                if (response['result'] == 'success') {
                    Swal.fire('SUCCESS', response['message'], 'success').then(function () {
                        location.reload();
                        $('#configModal').modal('hide'); // 모달을 숨깁니다.
                    });

                } else {
                    Swal.fire('ERROR', response['message'], 'error');
                }
            },
            error: function (error) {
                Swal.fire('ERROR', "Error saving agent data.", 'error');
            }
        });
    });

});
// View Agent Detail Ajax End

// Send Script Ajax Start
$(document).ready(function () {

    let currentAgentId = null;

    // 각 에이전트의 'Send Script' 버튼을 클릭할 때의 이벤트 핸들러
    $(".send_script_button").click(function (e) {
        e.preventDefault();
        currentAgentId = $(this).data("id");

        // AJAX 호출로 사용 가능한 스크립트 이름들을 가져옵니다.
        $.ajax({
            type: "GET",
            url: "/api/get_script_names",
            success: function (response) {
                let options = '';
                response.forEach(script => {
                    options += `<option value="${script.name}" data-os="${script.os_type}">${script.name}</option>`;
                });
                $("#selectScript").html(options);

                // 모달을 표시합니다.
                $('#sendScriptModal').modal('show');
            },
            error: function (error) {
                Swal.fire('ERROR', "Error fetching script names.", 'error');
            }
        });
    });

    // 모달 내의 'Send' 버튼을 클릭할 때의 이벤트 핸들러
    $("#sendScriptButton").click(function (e) {
        e.preventDefault();

        let selectedScript = $("#selectScript").val();
        let osType = $("#selectScript option:selected").data("os");

        // 선택된 스크립트와 함께 /admin/api/send_script로 AJAX POST 요청을 보냅니다.
        $.ajax({
            type: "POST",
            url: "/api/send_script",
            data: {
                script_name: selectedScript,
                os_type: osType,
                agent_id: currentAgentId
            },
            success: function (response) {
                if (response.result === "success") {
                    Swal.fire(
                        'successfully',
                        "Script sent successfully!",
                        'success'
                    ).then(function () {
                        location.reload();
                        $('#sendScriptModal').modal('hide');
                    });

                } else {
                    Swal.fire(
                        'Error!',
                        response.message || "Error sending script.",
                        'error'
                    );
                }
            },
            error: function (error) {
                Swal.fire(
                    'Error!',
                    response.message || "Error sending script.",
                    'error'
                );
            }
        });
    });
});
// Send Script Ajax End

// Run Script Ajax Start
$(document).ready(function () {

    // Run Script 버튼 클릭 이벤트 핸들러
    $(".run_script_button").click(function (e) {
        e.preventDefault();
        const currentAgentId = $(this).data("id");

        // Swal을 사용해서 사용자에게 Script를 실행할 것인지 확인
        Swal.fire({
            title: 'Are you sure?',
            text: "Do you really want to run the script for this agent?",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, run it!'
        }).then((result) => {
            if (result.isConfirmed) {
                // 사용자가 확인을 클릭하면, AJAX 요청 시작
                $.ajax({
                    type: "POST",
                    url: "/api/run_script",
                    data: {
                        agent_id: currentAgentId
                    },
                    success: function (response) {
                        if (response.result === "success") {
                            Swal.fire(
                                'Executed!',
                                'The script has been executed for the agent.',
                                'success'
                            ).then(function () {
                                location.reload();
                            });
                        } else {
                            Swal.fire(
                                'Error!',
                                response.message || "Error executing script for agent.",
                                'error'
                            );
                        }
                    },
                    error: function (error) {
                        Swal.fire(
                            'Error!',
                            "Error executing script for agent.",
                            'error'
                        );
                    }
                });
            }
        });
    });

});
// Run Script Ajax End
// Disconnect Agent Ajax Start
$(document).ready(function () {

    let currentAgentId = null;

    // Disconnect Agent 버튼 클릭 이벤트 핸들러
    $(".disconnect_button").click(function (e) {
        e.preventDefault();
        currentAgentId = $(this).data("id");

        // Swal을 사용해서 사용자에게 Disconnect Agent를 할 것인지 확인
        Swal.fire({
            title: 'Are you sure?',
            text: "Do you really want to disconnect this agent?",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, disconnect!'
        }).then((result) => {
            if (result.isConfirmed) {
                // 사용자가 확인을 클릭하면, AJAX 요청 시작
                $.ajax({
                    type: "POST",
                    url: "/api/disconnect_agent",
                    data: {
                        agent_id: currentAgentId
                    },
                    success: function (response) {
                        if (response.result === "success") {
                            Swal.fire(
                                'Disconnected!',
                                'The agent has been disconnected.',
                                'success'
                            ).then(function () {
                                location.reload();
                            });
                        } else {
                            Swal.fire(
                                'Error!',
                                response.message || "Error disconnecting agent.",
                                'error'
                            );
                        }
                    },
                    error: function (error) {
                        Swal.fire(
                            'Error!',
                            "Error disconnecting agent.",
                            'error'
                        );
                    }
                });
            }
        });
    });


});
